{"version":3,"sources":["js/cards.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["var AssignmentsGrid = React.createClass({\r\n\tmixins: [ReactFireMixin],\r\n\tgetInitialState: function() {\r\n    \treturn {\r\n    \t\t'assignments': [],\r\n    \t\t'addNewCard': false\r\n    \t};\r\n  \t},\r\n\tcomponentWillMount: function () {\r\n\t\tvar ref = new Firebase(\"https://suaveaccident.firebaseio.com/assignments\");\r\n  \t\tthis.bindAsArray(ref, \"assignments\");\r\n  \t\tthis.state.assignments.reverse();\r\n\t},\r\n  \trender: function() {\r\n  \t\tvar assignmentArr = [];\r\n  \t\tthis.state.assignments.forEach(function (assignment) {\r\n  \t\t\tassignmentArr.push(<div className=\"col w25\"><Card link={assignment.url} secondLink={assignment.url2} title={assignment.title} description={assignment.description} /></div>);\r\n  \t\t\tconsole.log(assignment.title, assignment.url);\r\n  \t\t});\r\n  \t\tif (this.state.addNewCard === true) {\r\n  \t\t\tassignmentArr.push(<NewCard/>);\r\n  \t\t}\r\n  \t\treturn (\r\n  \t\t\t<div className=\"grid\">\r\n\t\t\t\t{assignmentArr}\r\n\t\t  \t</div>\r\n\t\t);\r\n\t}\r\n}),\r\nCard = React.createClass({\r\n  \trender: function() {\r\n  \t\tvar secondLink = <a className=\"card-btn\" href={this.props.secondLink}>Presentation</a>;\r\n\t  \t\tif (this.props.secondLink === undefined) {\r\n  \t\t\tsecondLink = \"\";\r\n  \t\t}\r\n\t\treturn (\r\n\t\t  \t<a href={this.props.link}>\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<h1 className=\"card-title\">{this.props.title}</h1>\r\n\t\t\t\t\t<p className=\"card-info\">{this.props.description}</p>\r\n\t\t\t\t\t<a className=\"card-btn\" href={this.props.link}>View Assignment</a>\r\n\t\t\t\t\t{secondLink}\r\n\t\t  \t\t</div>\r\n\t\t  \t</a>\r\n\t\t);\r\n\t}\r\n}),\r\nNewCard = React.createClass({\r\n\tmixins: [ReactFireMixin],\r\n\tgetInitialState: function() {\r\n    \treturn {\r\n    \t\t'assignments': [],\r\n    \t\t'assignmentTitle': '',\r\n    \t\t'url': '',\r\n    \t\t'description':''\r\n    \t};\r\n  \t},\r\n\tcomponentWillMount: function () {\r\n\t\tvar ref = new Firebase(\"https://suaveaccident.firebaseio.com/assignments\");\r\n  \t\tthis.bindAsArray(ref, \"assignments\");\r\n\t},\r\n\thandleChange: function(event) {\r\n\t\tif (event.target.id === \"assignmentTitle\"){\r\n    \t\tthis.setState({assignmentTitle: event.target.value});\r\n\t\t} else if (event.target.id === \"urlInput\") {\r\n    \t\tthis.setState({url: event.target.value});\r\n\t\t} else if (event.target.id === \"descriptionInput\") {\r\n    \t\tthis.setState({description: event.target.value});\r\n\t\t}\r\n  \t},\r\n\thandleSubmit: function(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.firebaseRefs.assignments.push({\r\n\t\t\ttitle: this.state.assignmentTitle,\r\n\t\t\turl: this.state.url,\r\n\t\t\tdescription: this.state.description\r\n\t\t});\r\n\t\tthis.setState({ assignmentTitle: \"\", url: \"\", description: \"\" });\r\n\t},\r\n  \trender: function() {\r\n  \t\treturn (\r\n  \t\t\t<div className=\"col w25\">\r\n  \t\t\t\t<div className=\"card\">\r\n\t\t\t\t<form action=\"\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<label for=\"assignmentInput\">Assignment</label>\r\n\t\t\t\t\t<input id=\"assignmentTitle\" type=\"text\" value={this.state.assignmentTitle} onChange={this.handleChange} />\r\n\t\t\t\t\t<label for=\"urlInput\">URL</label>\r\n\t\t\t\t\t<input id=\"urlInput\" type=\"text\" value={this.state.url} onChange={this.handleChange} />\r\n\t\t\t\t\t<label for=\"descriptionInput\">Description</label>\r\n\t\t\t\t\t<textarea id=\"descriptionInput\" type=\"textarea\" value={this.state.description} onChange={this.handleChange} />\r\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" />\r\n\t\t\t  \t</form>\r\n\t\t\t  \t</div>\r\n\t\t  \t</div>\r\n\t\t);\r\n\t}\r\n});\r\nReact.render(\r\n  \t<AssignmentsGrid />,\r\n  \tdocument.getElementById('assignment-cards')\r\n);"],"sourceRoot":"/source/"}